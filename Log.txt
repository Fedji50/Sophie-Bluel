23/11/2023 15:40 : _ Récupération des données de l'API.
		   _ Création du dépot Github et ajout des dossiers backend et frontend.
		   _ Création des balises figure, img et figcaption avec la propriété "createElement". 

24/11/2023 11h45 : _ Création des différents travaux de l'architecte. Essai avec un projet puis création de la fonction genreateProjects pour mise en place boucle pour l'ajout de tous les travaux.
		     Insertion dans le fichier index.html avec "appendChild" et "innerHtml". Insertion dans le DOM avec appel de la fonction.

26/11/2023 10h30 : _ Création en html des boutons pour les filtrage des différents travaux par catégorie "tous", "objets", "appartements", "hotels & restaurants".
           16h30 : _ Ajout des propriétés aux classes CSS pour le design des boutons de filtrage.

27/11/2023 08h30 : _ Rédaction du code JS pour le filtrage par catégorie:
		   _ création des listes objets, appartements et hôtels & restaurants avec la fonction "filter".
		   _ récuperation des boutons créés avec "getElementByID", ajout d'écouteur d'évènements avec "addEventListener" au click sur les boutons
		   _ appel de [document.querySelector(".gallery").innerHTML= "";] pour empêcher l'affichage de la liste complète en plus des listes filtrées.
		   _ appel de la fonction generateProjects avec les différentes listes en paramètres
	   16h00 : _ début de la création de la page de connexion en HTML et la lier dans le fichier index.html

28/11/2023 10h30 : _ Création et rédaction du fichier login.css pour la page de connexion login.html
	   16h00 : _ Rectification du formulaire de connexion sur la page login.html:
			_ mise en place d'un "placeholder" et d'une datalist pour la saisie
	   18h00 : _ Création du fichier login.js pour le traitement de la requête de connexion
		   
29/11/2023 10h00 : _ Création fonction saveLoginUser qui recupère les balises du formulaire de login et enregistre les infos sur l'API avec la requête POST et la fonction fetch.

30/11/2023 21h50 : _ Création fonction validerEmail afin de verifier la composition de l'adresse mail et errorMailPassword pour vérifier la combinaison mail+password

03/12/2023 18h25 : _ Travail sur la fonction fetch de la fonction saveLoginUser (ajout du bloc try-catch pr le traitement de la réponse asynchrone et de l'erreur potentielle)
		   _ Mise ne place d'une redirection vers la page index.html quand l'utilisateur est loggé dans la fonction errorMailPassword.	

06/12/2023 12:20 : _ Enregistrement de userId et token dans localStorage et les cookies avec la fonction setCookie.
		   _ Ajout des icones et du mode édition dans le fichier index.html et modification fichier style.css avec les classes .editionMode et .editionBtn
	   15:05 : _ modifs .editionMode et .editionBtn et ajouts de la div "projects" et du bouton "modifyBtn" et des classes CSS.
	   22:00 : _ màj works.js : Récuperation du userId et du token pour resté identifié, récupération des différents éléments du DOM (editionMode, loginHref, logoutHref,modifyBtn, filters, projects)
		     et création de la fonction editionMode pour faire apparaitre et disparaitre des éléments quand on est connecté avec une condition if/else.
		   _ Création fonction removeLocalStorage pour vider le localStorage au clic sur lien logoutHref et redirection sur la page login.html. 

07/12/2023 14h00 : _ Modification works.js avec la fonction editionMode.

09/12/2023 23:00 : _ Réorganisation du fichier works.js avec placement des fonctions à la fin pour plus de lisibilité et compréhension.
		   _ Modification fonction editionMode avec rajout de marginRight sur H2 de div=Projects.
		   _ Création de la fonction loginDetection qui permet de passer en mode administrateur (activation de la fonction editionMode) si détection de userId et token dans le LocalStorage.
		   
11/12/2023 21:40 : _ Création fichier add.js pour affichage modale avec fonctions openModal et closeModal
		   _ Modif index.html et style.css pour la création de la modale permettant d'ajouter des projets

12/12/2023 15:50 : _ Modifs index.html => rajout des <div class="modal-header">, <div class="icon-close"> et <div class="works">. Séparation <hr> 
		     Modifs style.css => rajout du style pour la modale.

13/12/2023 21:45 : _ Modif index.html => suppression lorem ipsum dans div "works" et affichage des photots des projets dans la modale par JS avec fonction generatePhotosModal dans add.js

14/12/2023 22h05 : _ Modif style.css et add.js => ajout de l'icône de suppression de travaux par JS. 

19/12/2023 19h10 : _ Modif login.js => correction function validationEmail()
		   _ Modif add.js => maj function generatePhotosModal et abandon function deleteWorks ()  

20/12/2023 22h00 : _ Màj add.js => suppression éléments mis en commentaires

21/12/2023 19h30 : _ màj add.js => remaniements function generatePhotosModal (works) et function deleteWorks ()(non valide)
		   _ generatePhotosModal => supprime les projets de la page et de la database ms ne met pas à jour la page sans actualiser manuellement.

29/12/2023 11h10 : _ génération d'un nouveau token par swagger car problème avec le 1er ( reponse 401 => pb authentification)
		   _ Modif add.js => changement condition test après demande de suppression (reponse.status === 200 || reponse.status === 204),
		     ajout de constantes pour selectionner et supprimer les projets

01/01/2024 18h25 : _ Màj index.html => intégration div"addProjects" à la modale
		   _ Màj add.js => intégration "#addProjects" à la fonction openModal et closeModal, et faire apparaître la page "addProjects" au clic sur le bouton "ajouter photo"
		     et retour sur la page "deleteProjects" en cliquant sur la flèche "return".
		   _ Màj style.css => mise en plca du style avec les classes .addPhoto, .icons, .return, .icon-close, .validation

02/01/2024 22h15 : _ Màj index.html => mise en place formulaire (div "addForm", "picture")
		   _ Màj style.css => mise en forme style formulaire (".picture", ".addForm")

03/01/2024 16h40 : _ Màj index.html => mise en place formulaire (div "addForm", "picture", <i>, <label> & <input>, <p>, ),
		   _ Màj style.css => mise en forme style formulaire (".picture", ".addForm", ".addForm label", "#addProjectForm", ".fa-image", ".picture label", "input[type="file"]", ".file-upload",
		     ".picture p", "#title", ".cat-select-group", ".cat-select", ".addForm hr")

05/01/2024 18h30 : _ Màj index.html => mise en place de la fonction previewfile(this) sur l'attribut onchange de l'élément input du formulaire d'ajout de projet.
		   _ Màj add.js => mise en place de la fonction previewfile.

07/01/2024 14h05 : _ Màj index.html => ajout du script repview.js pour la fonction previewfile au début des scripts dans la balise <head>
		   _ Création preview.js pour la prévisualisation de l'image du formulaire d'ajout de projet et suppression dans add.js
		   _ Modif style.css => modif .preview pour suppression bordure.

	   21h50 : _ Màj add.js => mise en place condition pour remettre à zéero le formulaire qd on revient en arrière ou que l'on ferme la modale.

09/01/2024 00h05 : _ Màj add.js => construction fonction "errormessageForm" pour afficher un message si erreur dans le formulaire, et construction fonction "addNewProject" qui
		     récupère les données du formulaire pour les envoyer à l'API.

10/01/2024 15h50 : _ Correction add.js => correction "errorMessageForm" pour se déclencher au clic du bouton validation et non à la soumission du formulaire.

12/01/2024 16h47 : _ Màj add.js => mise place fetch pour envoyer les données à l'API et début traitement réponse.

14/01/2024 19h00 : _ màj add.js et index.html => renommage de l'input de type "file" pour correspondre au nom dans l'API
		   _ màj style.css => rectification des propriétés des classes une fois un projet intégré avec dans la "gallery", dans "works" et "preview".

16/01/2024 16h50 : _ màj add.js => suppression de la fonction "enableValidationBtn" et création du fichier validationForm.js avec dedans la fonction "errorMessageForm"
		   _ màj index.html => ajout de l'attribut "onsubmit" avec la fonction "errorMessageForm" sur le formulaire pr empêcher la soumission si mal rempli et
		     suppresion de l'attribut "disabled" sur le bouton "valider" du formulaire.

22/01/2024 13h35 : _ màj add.js => création de la fonction "emptyfields" qui vident les champs du formulaire si on soumet, revient en arrière ou ferme la modale.
		     		=> mise en place des promesses du fetch avec 1ère promesse avec la fonction "emptyfields", la réponse du serveur et le traitement de la réponse
				   en json et 2ème promesse avec le résultat de la réponse, si résultat et pas d'erreur alors création des éléments et insertion dans les div "gallery" et "works".
				=> mise en place d'un catch en cas d'erreur de la requête fetch.
		   _ màj works.js => suppression de divers console.log dans le fichier.
		 

		     